openapi: 3.0.3
info:
  title: 'ToDO API'
  version: 1.0.0
  description: |
    запросы к API начинаются с `/api/v1/`

    #Описание
    Список задач с возможностью добавлять, редактировать и удалять задачи.
    Можно устанавливать крайний срок исполнения и отмечать, выполнена задача или нет.
    История изменений сохраняется.
    Каждая задача может относиться к одной категории и может быть отмечена несколькими метками.
    
servers:
  - url: /api/v1/

tags:
  - name: TASKS
    description: Задачи
  - name: TAGS
    description: Метки
  - name: CATEGORIES
    description: Категории

paths:
  /categories/:
    get:
      tags:
      - CATEGORIES
      description: |
        Получить список всех категорий.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      tags:
      - CATEGORIES
      description: |
        Создать категорию.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /categories/{name}/:
    get:
      tags:
      - CATEGORIES
      description: |
        Получить категорию по названию.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this category.
        required: true
      security:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_v1_categories_update
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_v1_categories_partial_update
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_v1_categories_destroy
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this category.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/schema/:
    get:
      operationId: api_v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/tags/:
    get:
      operationId: api_v1_tags_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: api_v1_tags_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/v1/tags/{name}/:
    get:
      operationId: api_v1_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this tag.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: api_v1_tags_update
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: api_v1_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: api_v1_tags_destroy
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: A unique value identifying this tag.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/tasks/:
    get:
      operationId: api_v1_tasks_list
      description: ''
      parameters:
      - in: query
        name: category
        schema:
          type: string
          nullable: true
      - in: query
        name: deadline
        schema:
          type: string
          format: date-time
          nullable: true
      - in: query
        name: done
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: api_v1_tasks_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/tasks/{id}/:
    get:
      operationId: api_v1_tasks_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: api_v1_tasks_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: api_v1_tasks_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: api_v1_tasks_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/tasks/{id}/history/:
    get:
      operationId: api_v1_tasks_history_list
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskHistory'
          description: ''
  /api/v1/tasks/{id}/history/download/:
    get:
      operationId: api_v1_tasks_history_download_list
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskHistory'
          description: ''
  /api/v1/tasks/download/:
    get:
      operationId: api_v1_tasks_download_list
      description: ''
      parameters:
      - in: query
        name: category
        schema:
          type: string
          nullable: true
      - in: query
        name: deadline
        schema:
          type: string
          format: date-time
          nullable: true
      - in: query
        name: done
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/tasks/send/:
    get:
      operationId: api_v1_tasks_send_retrieve
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/tasks/upload/:
    post:
      operationId: api_v1_tasks_upload_create
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_tasks_upload_update
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    HistoryTypeEnum:
      enum:
      - +
      - '~'
      - '-'
      type: string
    PatchedCategoryRequest:
      type: object
      properties:
        name:
          type: string
          pattern: ^[-\w]+$
          maxLength: 50
    PatchedTagRequest:
      type: object
      properties:
        name:
          type: string
          pattern: ^[-\w]+$
          maxLength: 50
    PatchedTaskRequest:
      type: object
      properties:
        deadline:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        text:
          type: string
        done:
          type: boolean
        category:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
    Tag:
      type: object
      properties:
        name:
          type: string
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    TagRequest:
      type: object
      properties:
        name:
          type: string
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        deadline:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        text:
          type: string
        done:
          type: boolean
        category:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
      required:
      - created
      - deadline
      - id
      - text
      - updated
    TaskHistory:
      type: object
      properties:
        history_id:
          type: integer
          readOnly: true
        deadline:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        history_date:
          type: string
          format: date-time
        id:
          type: integer
        text:
          type: string
        done:
          type: boolean
        history_change_reason:
          type: string
          nullable: true
          maxLength: 100
        history_type:
          $ref: '#/components/schemas/HistoryTypeEnum'
        category:
          type: string
          nullable: true
        history_user:
          type: integer
          nullable: true
      required:
      - created
      - deadline
      - history_date
      - history_id
      - history_type
      - text
      - updated
    TaskRequest:
      type: object
      properties:
        deadline:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        text:
          type: string
        done:
          type: boolean
        category:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
      required:
      - created
      - deadline
      - text
      - updated
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
