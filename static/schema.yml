openapi: 3.0.3
info:
  title: 'ToDO API'
  version: 0.5.0
  description: |
    запросы к API начинаются с `/api/v1/`

    # Описание

    Список задач с возможностью добавлять, редактировать и удалять задачи.

    Можно устанавливать крайний срок исполнения и отмечать, выполнена задача или нет.

    История изменений сохраняется.

    Каждая задача может относиться к одной категории и может быть отмечена несколькими метками.
    
    
servers:
  - url: /

tags:
  - name: TASKS
    description: Задачи
  - name: TAGS
    description: Метки
  - name: CATEGORIES
    description: Категории
  - name: DOWNLOAD
    description: Выгрузка списка задач в файл и загрузка новых задач из файла.
  - name: UPLOAD
    description: Отправка файла с задачами на удаленный сервер.

paths:
  /categories/:
    get:
      tags:
      - CATEGORIES
      description: |
        Получить список всех категорий.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
      - CATEGORIES
      description: |
        Создать категорию.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /categories/{name}/:
    get:
      tags:
      - CATEGORIES
      description: |
        Получить все задачи в категории.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название категории.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      tags:
      - CATEGORIES
      description: |
        Изменить категорию по названию.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название категории.
        required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    patch:
      tags:
      - CATEGORIES
      description: |
        Изменить категорию по названию.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название категории.
        required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
      - CATEGORIES
      description: |
        Удалить категорию по названию.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название категории.
        required: true
      responses:
        '204':
          description: No response body
  /tags/:
    get:
      tags:
      - TAGS
      description: |
        Получить список всех меток.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
    post:
      tags:
      - TAGS
      description: |
        Создать новую метку.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
  /tags/{name}/:
    get:
      tags:
      - TAGS
      description: |
        Получить все задачи с меткой.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название метки.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      tags:
      - TAGS
      description: |
        Изменить метку по названию.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название метки.
        required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    patch:
      tags:
      - TAGS
      description: |
        Изменить метку по названию.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название метки.
        required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    delete:
      tags:
      - TAGS
      description: |
        Удалить метку по названию.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Название метки.
        required: true
      responses:
        '204':
          description: No response body
  /tasks/:
    get:
      tags:
      - TASKS
      description: |
        Получить список задач.
      parameters:
      - in: query
        name: category
        description: Фильтр по категории.
        schema:
          type: string
          nullable: true
      - in: query
        name: deadline
        description: Фильтр по сроку выполнения.
        schema:
          type: string
          format: date-time
          nullable: true
      - in: query
        name: done
        description: Фильтр по выполнению.
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Какое поле использовать для сортировки.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: Поиск по тексту задачи.
        schema:
          type: string
      - in: query
        name: tags
        description: Фильтр по меткам.
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      tags:
      - TASKS
      description: |
        Создать задачу.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}/:
    get:
      tags:
      - TASKS
      description: |
        Получить задачу по ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный ID задачи.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      tags:
      - TASKS
      description: |
        Изменить задачу по ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный ID задачи.
        required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    patch:
      tags:
      - TASKS
      description: |
        Изменить задачу по ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный ID задачи.
        required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      tags:
      - TASKS
      description: |
        Удалить задачу по ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный ID задачи.
        required: true
      responses:
        '204':
          description: No response body
  /tasks/{id}/history/:
    get:
      tags:
      - TASKS
      description: |
        Получить историю изменений задачи по ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный ID задачи.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskHistory'
  /tasks/{id}/history/download/:
    get:
      tags:
      - DOWNLOAD
      description: |
        Скачать историю изменений задачи по ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный ID задачи.
        required: true
  /tasks/download/:
    get:
      tags:
      - DOWNLOAD
      description: |
        Скачать все задачи в файле `.csv`.
  /tasks/send/:
    post:
      tags:
      - UPLOAD
      description: |
        Отправить файл с задачами на удаленный сервер.  

        Все существующие задачи выгружаются в файл `.csv` и отправляются на удаленный сервер.

        Порядок полей: `category`, `created`, `deadline`, `done`, `id`, `tags.0`, `tags.1`, `tags.2`, `...`, `tags.n`, `text`, `updated`.

      responses:
  /tasks/upload/:
    post:
      tags:
      - DOWNLOAD
      description: |
        Загрузить задачи из файла.                      

        Порядок полей для парсера:
        `text`,`deadline`,`category`,`tag1`,`tag2`,`tag3`,`tag4`,..
        
        Формат `deadline` - ГГГГ-ММ-ДД ЧЧ:ММ

        Количество меток не ограничено.

      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '400':
          description: Неверный формат файла.
components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string
          description: Название категории
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          description: Название категории
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    HistoryTypeEnum:
      enum:
      - +
      - '~'
      - '-'
      type: string
    PatchedCategoryRequest:
      type: object
      properties:
        name:
          type: string
          description: Название категории
          pattern: ^[-\w]+$
          maxLength: 50
    PatchedTagRequest:
      type: object
      properties:
        name:
          type: string
          description: Название метки
          pattern: ^[-\w]+$
          maxLength: 50
    PatchedTaskRequest:
      type: object
      properties:
        deadline:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ.
          format: date-time
        created:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается создании.
          format: date-time
        updated:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается при последнем изменении.
          format: date-time
        text:
          description: Текст задачи.
          type: string
        done:
          description: Выполнено - ДА / НЕТ.
          type: boolean
        category:
          description: Название категории
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          description: Список меток
    Tag:
      type: object
      properties:
        name:
          type: string
          description: Название метки
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    TagRequest:
      type: object
      properties:
        name:
          type: string
          description: Название метки
          pattern: ^[-\w]+$
          maxLength: 50
      required:
      - name
    Task:
      type: object
      properties:
        id:
          type: integer
          description: ID задачи.
          readOnly: true
        deadline:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ.
          format: date-time
        created:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается создании.
          format: date-time
        updated:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается при последнем изменении.
          format: date-time
        text:
          description: Текст задачи.
          type: string
        done:
          description: Выполнено - ДА / НЕТ.
          type: boolean
        category:
          type: string
          description: Название категории
          nullable: true
        tags:
          type: array
          items:
            type: string
          description: Список меток
      required:
      - deadline
      - text
    TaskHistory:
      type: object
      properties:
        history_id:
          description: ID записи об изменениях.
          type: integer
          readOnly: true
        deadline:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ.
          format: date-time
        created:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается при создании.
          format: date-time
        updated:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается при изменении.
          format: date-time
        history_date:
          type: string
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается при изменении.
          format: date-time
        id:
          description: ID задачи.
          type: integer
        text:
          description: Текст задачи.
          type: string
        done:
          type: boolean
          description: Выполнено - ДА / НЕТ.
        history_change_reason:
          type: string
          nullable: true
          maxLength: 100
        history_type:
          $ref: '#/components/schemas/HistoryTypeEnum'
        category:
          type: string
          description: Название категории
          nullable: true
        history_user:
          type: integer
          nullable: true
    TaskRequest:
      type: object
      properties:
        deadline:
          type: string
          format: date-time
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ.
        created:
          type: string
          format: date-time
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается при создании.
        updated:
          type: string
          format: date-time
          description: Время в формате ГГГГ-ММ-ДД ЧЧ:ММ, автоматически устанавливается при последнем изменении.
        text:
          type: string
          description: Текст задачи.
        done:
          type: boolean
          description: Выполнено - ДА / НЕТ.
        category:
          type: string
          nullable: true
          description: Категория.
        tags:
          type: array
          items:
            type: string
          description: Список меток.
      required:
      - deadline
      - text
